@implements IDisposable

@inject NavigationManager NavigationManager
@inject Services.IUserPermissionService UserPermissions
@inject AuthenticationStateProvider AuthStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Yafers</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </div>
                @if (_canRegisterToFeis)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="register">
                            <span class="bi bi-register-for-feis-nav-menu" aria-hidden="true"></span> Register for the feis
                        </NavLink>
                    </div>

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="registrations">
                            <span class="bi bi-my-registrations-nav-menu" aria-hidden="true"></span> My registrations
                        </NavLink>
                    </div>
                }
                @if (_canManageStudents)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="students">
                            <span class="bi bi-my-students-nav-menu" aria-hidden="true"></span> My students
                        </NavLink>
                    </div>
                }
                @if (_canManageSchool)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="school">
                            <span class="bi bi-my-school-nav-menu" aria-hidden="true"></span> My school
                        </NavLink>
                    </div>
                }
                @if (_canManageFeis)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="feiseanna">
                            <span class="bi bi-my-feiseanna-nav-menu" aria-hidden="true"></span> My feiseanna
                        </NavLink>
                    </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    private bool _canRegisterToFeis;
    private bool _canManageStudents;
    private bool _canManageSchool;
    private bool _canManageFeis;
    
    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        _canRegisterToFeis = await UserPermissions.CanRegisterToFeisAsync();
        _canManageStudents = await UserPermissions.CanManageStudentsAsync();
        _canManageSchool = await UserPermissions.CanManageSchoolAsync();
        _canManageFeis = await UserPermissions.CanManageFeisAsync();
        AuthStateProvider.AuthenticationStateChanged += OnAuthStateChanged;
    }

    private async void OnAuthStateChanged(Task<AuthenticationState> _)
    {
        _canRegisterToFeis = await UserPermissions.CanRegisterToFeisAsync();
        await InvokeAsync(StateHasChanged);
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

